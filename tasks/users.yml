---
- name: Get users with specified RoleBinding
  set_fact:
    role_binding: "{{ lookup('oc',
                                'RoleBinding',
                                host=from_host,
                                token=hostvars[from_host]['ansible_sa_token'],
                                namespace=project_name,
                                resource_name=item,
                                validate_certs=validate_certs) }}"
  with_items: "{{ role_bindings_to_migrate }}"
  register: role_bindings

- name: Ensure project users are present in destination cluster
  oc:
    state: present
    inline:
      kind: User
      fullName: "{{ item.1 }}"
      metadata:
        name: "{{ item.1 }}"
    validate_certs: "{{ validate_certs }}"
    token: "{{ ansible_sa_token }}"
  with_subelements:
  - "{{ role_bindings.results }}"
  - ansible_facts.role_binding.userNames
  ignore_errors: yes

- pause:
    seconds: 15

- name: Ensure users have "{{ project_role }}" role in project "{{ dest_project_name }}"
  oc:
    state: present
    inline:
      kind: RoleBinding
      metadata:
        name: "{{ project_role }}"
        namespace: "{{ dest_project_name }}"
      roleRef:
        name: "{{ project_role }}"
      userNames:
      - "{{ item.1 }}"
    validate_certs: "{{ validate_certs }}"
    token: "{{ ansible_sa_token }}"
  with_subelements:
  - "{{ role_bindings.results }}"
  - ansible_facts.role_binding.userNames
