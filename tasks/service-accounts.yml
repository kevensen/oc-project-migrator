---
- name: Get Service Accounts
  set_fact:
    service_account: "{{ lookup('oc',
                                'ServiceAccount',
                                host=from_host,
                                token=hostvars[from_host]['ansible_sa_token'],
                                namespace=project_name,
                                resource_name=item,
                                validate_certs=validate_certs) }}"
  with_items: "{{ service_accounts_to_migrate }}"
  register: service_accounts

- name: Migrate Service Accounts
  oc:
    state: present
    namespace: "{{ dest_project_name }}"
    inline: "{{ item.ansible_facts.service_account | uniqueify_resource }}"
    validate_certs: "{{ validate_certs }}"
    token: "{{ ansible_sa_token }}"
  with_items: "{{ service_accounts.results }}"

- block:


  - name: Get Service Account Docker Configs
    set_fact:
      service_account: "{{ lookup('oc',
                                  'Secret',
                                  host=from_host,
                                  token=hostvars[from_host]['ansible_sa_token'],
                                  namespace=project_name,
                                  fieldSelector='type=kubernetes.io/dockercfg',
                                  validate_certs=validate_certs) }}"
    register: tokens

  - name: Migrate Service Account Docker Configs
    oc:
      state: present
      inline:
        kind: Secret
        apiVersion: "{{ tokens.ansible_facts.service_account.apiVersion }}"
        metadata:
          name: "{{ item['metadata']['name'] }}-{{ from_host | replace('.','-') }}"
          namespace: "{{ dest_project_name }}"
          annotations:
            kubernetes.io/service-account.name: "{{ item['metadata']['annotations']['kubernetes.io/service-account.name'] }}"
        data: "{{ item['data'] | dockercfg_change_server(registry_route_hostname, registry_cluster_ip, 5000)}}"
        type: "{{ item['type'] }}"
      validate_certs: "{{ validate_certs }}"
      token: "{{ ansible_sa_token }}"
    no_log: true
    with_items: "{{ tokens.ansible_facts.service_account.item_list }}"

  - name: Create Service Account for Pulling Images from Source Cluster
    oc:
      state: present
      inline:
        kind: ServiceAccount
        apiVersion: "{{ tokens.ansible_facts.service_account.apiVersion }}"
        metadata:
          namespace: "{{ dest_project_name }}"
          name: "{{ item['metadata']['annotations']['kubernetes.io/service-account.name'] }}"
        imagePullSecrets:
        - name: "{{ item['metadata']['name'] }}-{{ from_host | replace('.','-') }}"
        secrets:
        - name: "{{ item['metadata']['name'] }}-{{ from_host | replace('.','-') }}"
      validate_certs: "{{ validate_certs }}"
      token: "{{ ansible_sa_token }}"
    no_log: true
    with_items: "{{ tokens.ansible_facts.service_account.item_list }}"

  when: inventory_hostname != from_host

- name: Ensure service account has image-puller role from project "{{ dest_project_name }} to {{ project_name }}"
  oc:
    state: present
    inline:
      kind: RoleBinding
      metadata:
        name: "system:image-pullers"
        namespace: "{{ project_name }}"
      roleRef:
        name: "system:image-puller"
      groupNames:
      - "system:serviceaccounts:{{ project_name }}"
      - "system:serviceaccounts:{{ dest_project_name }}"
    token: "{{ ansible_sa_token }}"
    validate_certs: "{{ validate_certs }}"
  when: inventory_hostname == from_host
