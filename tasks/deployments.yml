---
- name: Get Deployments
  set_fact:
    deployment: "{{ lookup('oc',
                           'DeploymentConfig',
                            host=from_host,
                            token=hostvars[from_host]['ansible_sa_token'],
                            namespace=project_name,
                            resource_name=item,
                            validate_certs=validate_certs) }}"
  with_items: "{{ deployments_to_migrate }}"
  register: deployments


- name: Migrate Deployments
  oc:
    state: present
    inline:
      kind: DeploymentConfig
      apiVersion: "{{ item.ansible_facts.deployment.apiVersion }}"
      metadata:
        name: "{{ item.ansible_facts.deployment.metadata.name }}"
        namespace: "{{ dest_project_name }}"
        labels: "{{ item.ansible_facts.deployment.metadata.labels }}"
        annotations: "{{ item.ansible_facts.deployment.metadata.annotations }}"
      spec:
        strategy: "{{ item.ansible_facts.deployment.spec.strategy }}"
        minReadySeconds: "{{ item.ansible_facts.deployment.spec.minReadySeconds | default(0) }}"
        triggers: "{{ item.ansible_facts.deployment.spec.triggers | translate_image_trigger(dest_project_name) }}"
        replicas: "{{ item.ansible_facts.deployment.spec.replicas }}"
        revisionHistoryLimit: "{{ item.ansible_facts.deployment.spec.revisionHistoryLimit | default(3) }}"
        test: "{{ item.ansible_facts.deployment.spec.test | default(false) }}"
        selector: "{{ item.ansible_facts.deployment.spec.selector }}"
        template: "{{ item.ansible_facts.deployment.spec.template | remove_image }}"
    validate_certs: "{{ validate_certs }}"
    token: "{{ ansible_sa_token }}"
  with_items: "{{ deployments.results }}"
